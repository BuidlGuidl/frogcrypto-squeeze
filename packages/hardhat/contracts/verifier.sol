// SPDX-License-Identifier: GPL-3.0
/*
    Copyright 2021 0KIMS association.

    This file is generated with [snarkJS](https://github.com/iden3/snarkjs).

    snarkJS is a free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    snarkJS is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
    or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public
    License for more details.

    You should have received a copy of the GNU General Public License
    along with snarkJS. If not, see <https://www.gnu.org/licenses/>.
*/

pragma solidity >=0.7.0 <0.9.0;

contract Groth16Verifier {
    // Scalar field size
    uint256 constant r    = 21888242871839275222246405745257275088548364400416034343698204186575808495617;
    // Base field size
    uint256 constant q   = 21888242871839275222246405745257275088696311157297823662689037894645226208583;

    // Verification Key data
    uint256 constant alphax  = 20491192805390485299153009773594534940189261866228447918068658471970481763042;
    uint256 constant alphay  = 9383485363053290200918347156157836566562967994039712273449902621266178545958;
    uint256 constant betax1  = 4252822878758300859123897981450591353533073413197771768651442665752259397132;
    uint256 constant betax2  = 6375614351688725206403948262868962793625744043794305715222011528459656738731;
    uint256 constant betay1  = 21847035105528745403288232691147584728191162732299865338377159692350059136679;
    uint256 constant betay2  = 10505242626370262277552901082094356697409835680220590971873171140371331206856;
    uint256 constant gammax1 = 11559732032986387107991004021392285783925812861821192530917403151452391805634;
    uint256 constant gammax2 = 10857046999023057135944570762232829481370756359578518086990519993285655852781;
    uint256 constant gammay1 = 4082367875863433681332203403145435568316851327593401208105741076214120093531;
    uint256 constant gammay2 = 8495653923123431417604973247489272438418190587263600148770280649306958101930;
    uint256 constant deltax1 = 9201269418443374920861724215001636099090596655013380390273080488715081244773;
    uint256 constant deltax2 = 12056364250860047366027443743695388594413722268550616740213624506543893867988;
    uint256 constant deltay1 = 14980426654003270270297188113740171048222577776806473532958720413984992526720;
    uint256 constant deltay2 = 7850710140193198294961717145249333752705200406714924323454521965309418040461;

    
    uint256 constant IC0x = 21085364989205158672677654030471440167308413687485418438728291154481167784848;
    uint256 constant IC0y = 8381059457308807500808245274630912211138680355530331980883307977371546249626;
    
    uint256 constant IC1x = 10146603662389823817203601544954720221125796873290781242195330339417609082321;
    uint256 constant IC1y = 18681980808248992785554940879934658701505509704917161385397765561406893536956;
    
    uint256 constant IC2x = 3165469419422505165461176189781546322698129977177410969300649888901670500194;
    uint256 constant IC2y = 11665740578056355912328818260677496618193123390720152442072418425524043384332;
    
    uint256 constant IC3x = 55319102471695625356297163447862143395456487868508401001692111450416712693;
    uint256 constant IC3y = 16481187476679313263089722838291070057072528251688201155969425070457454435117;
    
    uint256 constant IC4x = 13544645331563484135762926475702101446380059596828011185320924199627187773381;
    uint256 constant IC4y = 5696663171385442610192961436370345545234637600596610292971243652158093342581;
    
    uint256 constant IC5x = 15758503503953654148258760423285100612112324379468482983042549236966339857810;
    uint256 constant IC5y = 3967093136857729990540097593979918601127289236232245155731028888108076307624;
    
    uint256 constant IC6x = 21435075559332861929828148365263981408408534748710812652697909712318618426100;
    uint256 constant IC6y = 9769989462607477580940121390873375322299041857932818602150160581090604551918;
    
    uint256 constant IC7x = 21133658049627271000498297562043443325098885216159999974626485137338687737473;
    uint256 constant IC7y = 2616609309980720703637476843258751555029748307033303316489723355608428373110;
    
    uint256 constant IC8x = 798608137801723992079432748027823026741971405449264681027640782990276143220;
    uint256 constant IC8y = 16530162153516130599899175462500643055517877371955965015311891866763705397425;
    
    uint256 constant IC9x = 9555161954216289956594989404066212071019151105172433184052657301489047013038;
    uint256 constant IC9y = 20108203954051723599920402733641255199792882853518406527770300725225688582571;
    
    uint256 constant IC10x = 2807110233324734932471151609303713821283723617181175949638550199352240593460;
    uint256 constant IC10y = 15023629066733318902730513430959514394541785727762704229923439292463191680036;
    
    uint256 constant IC11x = 12317397765457139259929628469490897566911979155354852763678581724034308764906;
    uint256 constant IC11y = 8468435888244166772563906600363658974127897286726862057550183167370267975592;
    
    uint256 constant IC12x = 2106160320529499997823082287387194855584999865233154026876778543180826407105;
    uint256 constant IC12y = 3367416875696572120876133728834115055029331537352774594287234523596219609690;
    
    uint256 constant IC13x = 19298610644443536474211971818760474930191085080064616377696942643540100526099;
    uint256 constant IC13y = 17149500838114113346970053317949223024850614310287463094456851410522167688106;
    
    uint256 constant IC14x = 15881924091583113072009259609630483383696791057092818121260434821529729949114;
    uint256 constant IC14y = 17679555988697675850547015208402487295694146327854760469928592383761389955253;
    
    uint256 constant IC15x = 597152854904718705352523283157713657667364324321656284825230004994419850847;
    uint256 constant IC15y = 7402732278797673322888481630611495124861378111774532725431303625210619006259;
    
    uint256 constant IC16x = 13816414219805100320524132403238647598503803035697756688075001383236252380079;
    uint256 constant IC16y = 11230001157105957489220162541456102464948092887026057692699009080015971848826;
    
    uint256 constant IC17x = 5120918794424707819178893904616071136147966959171172235207201787222196258794;
    uint256 constant IC17y = 8404472790359624287233100846749400587354157595859181072702230070967091223461;
    
    uint256 constant IC18x = 21257077585142188798967831180389343415322898439755214045120116256857525724840;
    uint256 constant IC18y = 1545190608968957500300588263216529271857750160068692595249367703993787471748;
    
    uint256 constant IC19x = 10670537547233879199527569844441506247009870653280540861691498349393464797207;
    uint256 constant IC19y = 14847993486133411842657188820036007869922386841388256803482406016717597178687;
    
    uint256 constant IC20x = 14767155978397672677258487850698580291876401177985135688302468956318301161139;
    uint256 constant IC20y = 7013323163666775711577498537070980012826666127580288531440808725013158445555;
    
    uint256 constant IC21x = 2203216071449545080510752949263126756175665636805982865094192268953459270084;
    uint256 constant IC21y = 5213799269873983225220404225188821949687353726946105977396462293088326018143;
    
    uint256 constant IC22x = 79828244925752897277058306103244637954235149183175431665936050147933429803;
    uint256 constant IC22y = 17286342419449794755649638091883127840413488387870879883606944119525126140246;
    
    uint256 constant IC23x = 6649015576934177157738007156711969648426286099816260414316722851020310924184;
    uint256 constant IC23y = 12670466816696202644046006474464946613916900029724962412453416531785932117212;
    
    uint256 constant IC24x = 20019559678817044434039448246083745054739377920221087216272026788113253264747;
    uint256 constant IC24y = 11987556962546904185965742772959351546784309984731723325705264703246452512712;
    
    uint256 constant IC25x = 4336236285449040436954168895865987681615734917547077533340904512944727282725;
    uint256 constant IC25y = 4232524418694785934019948698251633182146332906034981558798751531685369778005;
    
    uint256 constant IC26x = 16312098044989952039040989843955440831288679889294738718211443708301090201721;
    uint256 constant IC26y = 14020682195766829710849491486953510909794124961658127921762756157372228324050;
    
    uint256 constant IC27x = 21715560306635605066648359561501264290916589673649956450157476183143055410331;
    uint256 constant IC27y = 9676306550929906786987203784160192164695913102836061109996951945442452454418;
    
    uint256 constant IC28x = 15289871108013864958916085404240458226242543090385535067345254869471834756950;
    uint256 constant IC28y = 12419127438319082550558760823329881732615182831581780605377099015993698229212;
    
    uint256 constant IC29x = 4880214838686126971052158293826778036118860732294697304937782635848307560058;
    uint256 constant IC29y = 262849722180907349672712804580485618503334965119636908238782305420052150278;
    
    uint256 constant IC30x = 19589865817221458071126661672595404017432955881969248283650009099990788452923;
    uint256 constant IC30y = 5139485628936205876670847641861498469709252422068180610488758700773539685724;
    
    uint256 constant IC31x = 12394613498569714327564518316012248608885590000037174810116211176336030856733;
    uint256 constant IC31y = 21337518440307985314759101125239934141137427008121201595617487116240547925481;
    
    uint256 constant IC32x = 1265684492422834288793179952382501217657596003569497597373942678396194062673;
    uint256 constant IC32y = 1001127554186202337585344389212299059396038090441221695497251358335076321469;
    
    uint256 constant IC33x = 13283941936048252887229021018709511198110871263275052932204718985384673969326;
    uint256 constant IC33y = 17340140203030579842820156640271580880223890103969587280005777086133478479018;
    
    uint256 constant IC34x = 8228231335587019941491651155701297165143544696630705793706661740596605237174;
    uint256 constant IC34y = 9434458371336204185130819180789286943469140394099719071992435873490580990343;
    
    uint256 constant IC35x = 19302423175041151319337436677840526652578821956130097617929113751560951026493;
    uint256 constant IC35y = 12294249940599513854072179851066018841974115755980990857227633165988744029679;
    
    uint256 constant IC36x = 16720917032759036526373145885829943548200543539421508917006280255568885204492;
    uint256 constant IC36y = 2731531634605969757144241391132936336482847487732993694066711197519446912682;
    
    uint256 constant IC37x = 19572177681909150099292004410833072340193103147528606575530092921913537808725;
    uint256 constant IC37y = 8608521579576832889448031180237272190472560084150935667200210043107137741609;
    
    uint256 constant IC38x = 11155888639129132488628811141410165324840398510209814791834462245245856567020;
    uint256 constant IC38y = 21532968847609179755944706721684795487749980871372194444251352146984498334868;
    
    uint256 constant IC39x = 3450965158031167623300638147191059918193888981313238887037272551761297280532;
    uint256 constant IC39y = 7265806391332503929646498872223429422903004051189778329715841574857015494249;
    
    uint256 constant IC40x = 14371522203307147518832137470073453584582341577380093946027098735816991215369;
    uint256 constant IC40y = 19131758269963090304461898988133108517071690026470933014511998278361596812194;
    
    uint256 constant IC41x = 17830142421857584329958302134334626841293319316958300455539520974256707974355;
    uint256 constant IC41y = 3244696512409980030613557975971691058953366780486072485470590890195273593436;
    
    uint256 constant IC42x = 9718348959745425017058753653231581419486548263209498589276678890701582058344;
    uint256 constant IC42y = 20510732292100337506039108310771675055484184405058457387245356932467222045014;
    
    uint256 constant IC43x = 7410208540542307250334414523325488507056826897293781694602033639201001654332;
    uint256 constant IC43y = 17802806307562343987437478183391124200363072818790810285839539627240744194474;
    
    uint256 constant IC44x = 12508494324858830111216306397011033890210998271225215035530911527662536498862;
    uint256 constant IC44y = 12911274716472448532062266486676583996524624101005711637249476910503611052026;
    
    uint256 constant IC45x = 2512941617287455790309503885215508088038433101210765641201025702332753314600;
    uint256 constant IC45y = 1087941528443160045911394461248450645671499923485379688858891139427307717370;
    
    uint256 constant IC46x = 10020421398123246490276939837034551939810321230431798204719893184256807651068;
    uint256 constant IC46y = 12054313630884793166462040594147482246158895684535107132218272236004094303253;
    
    uint256 constant IC47x = 18407764607815825910382961297576385174057206179121021689438082120865512659053;
    uint256 constant IC47y = 12571549002635161508740290056656055353510663944236209546996761906065339330768;
    
    uint256 constant IC48x = 17676567731157797442660813160123032179714359605410793851151170863538617597658;
    uint256 constant IC48y = 21172654561848185039023937688404895473133956824132593212164082308809283001733;
    
    uint256 constant IC49x = 13761336110892003304358658933007156747084673012128663677971515008095152948130;
    uint256 constant IC49y = 15033404810054343998849532398714947339461401924561412990749495302991428069680;
    
    uint256 constant IC50x = 16640346768800296384594216340614892371386672671679078075617183439626478646962;
    uint256 constant IC50y = 16846416597511260673364989732568739134180794928067253960531453174005326309221;
    
    uint256 constant IC51x = 20406874694626701192313572407848102491414825490603832085053078632470612961532;
    uint256 constant IC51y = 16205667728400367589742949909960429669243427031879225568082445688398321390982;
    
    uint256 constant IC52x = 4684105698144258544229274973060036506148726560517613735906096086318924426633;
    uint256 constant IC52y = 228248398594296558940072331983964701473299716985792651978058888848879733167;
    
    uint256 constant IC53x = 16741157567095738723566494092453895534139204027631654284380244701484914106869;
    uint256 constant IC53y = 20537346280739918325253750189846726659468691523465739148277600317215406744987;
    
    uint256 constant IC54x = 814680897086909293426857586648604600773159326485594875469097256850181819437;
    uint256 constant IC54y = 2244532206036290308524706188507322176432588072494681386578450994742516691368;
    
    uint256 constant IC55x = 3040205006324909704249918638678547011033545028222936709816517244947707348458;
    uint256 constant IC55y = 14752334228841590482319918475373190407401720743397417561765829840255752993797;
    
    uint256 constant IC56x = 12297776376963717567861108991895682322701246204205758836695247995934594897965;
    uint256 constant IC56y = 739536100462742962301630657393246300627865352408476132738595018355480713377;
    
    uint256 constant IC57x = 17082792502767669688354955966015359428952961256629299323795293411701640291977;
    uint256 constant IC57y = 14724757199379122183119425065311909812193748132921914788859987863449194680877;
    
    uint256 constant IC58x = 14643217752022291792501656818903246335744722784642875905886371362257933425538;
    uint256 constant IC58y = 19543291422532230888042477061460019266715251455845285907925897860971545451587;
    
    uint256 constant IC59x = 4825466205342089602384723004865374959755131814828236135180432663906882890154;
    uint256 constant IC59y = 684846464686235525099546364218691950920026532334354905692824199902315655999;
    
    uint256 constant IC60x = 20193673422034365381492040021257185890122820994366851232083734701336898495767;
    uint256 constant IC60y = 9787128530940499188315904920075196155061635657274732366711711425739326247881;
    
    uint256 constant IC61x = 14734456333466728473205213369036568468769087613118507464622666010540661568478;
    uint256 constant IC61y = 11133580978746631549387932697662942700306309132026103559017325448207714867838;
    
    uint256 constant IC62x = 17526581991481785955731689720666465089049956044166383352327210910823347823324;
    uint256 constant IC62y = 18789405847617091071846656832643901351684310870758756082345613934688673443291;
    
    uint256 constant IC63x = 21132941595038154078431149775944283046352451359932216381590846496485507133847;
    uint256 constant IC63y = 13184707237178749943884420678082192867231997133258009093400275895230041186595;
    
    uint256 constant IC64x = 13822267855716136182788807729898443294586826510597232679987372703798364854015;
    uint256 constant IC64y = 13017864242452396663359132134315279929882998790992747231219822039620468655215;
    
    uint256 constant IC65x = 12322069272332956923799765315688236479486319825741093734222922983155410872215;
    uint256 constant IC65y = 18890214711480628999921115557334485038375451632387663022897634837254489030282;
    
    uint256 constant IC66x = 8099049753004456676664853890077323076665024354157913080311552505743868864862;
    uint256 constant IC66y = 16310671730049302257970527525002303260239059573823381318164042897772747464257;
    
    uint256 constant IC67x = 12589603778190611682826887782657216903682375038190904933822768484525685887468;
    uint256 constant IC67y = 19509054526476218442221162919485235703525626542339540273780409588058326085014;
    
    uint256 constant IC68x = 8018620169728320922667833266081696371363117300597421807428180108115533437486;
    uint256 constant IC68y = 4317179461971811708569102611777256509842478359872503114337511995205299232340;
    
    uint256 constant IC69x = 20908208356390577461622512661966080360114628106635959365185151584779541223255;
    uint256 constant IC69y = 7613365314040038932899431611373941520405342601697695019504209217138182073804;
    
    uint256 constant IC70x = 20454135819378835829992302908415611463758594188608564850202115960275094794642;
    uint256 constant IC70y = 18432483536752321575942369008042889423131366007400762571495911635376746712897;
    
    uint256 constant IC71x = 15264982599374052361541152566160778366547056034785571334869639965592646277438;
    uint256 constant IC71y = 21365590368294682547787673280044932205857513010619550980298690161222785759991;
    
    uint256 constant IC72x = 4577898725000333461566723059829627969031985928201650895103448339788317706135;
    uint256 constant IC72y = 16804712983393538820702705498439560925228421826485683178076137225779219795910;
    
    uint256 constant IC73x = 19900356592443065451852995983079750574616066436315269755959516559873995461023;
    uint256 constant IC73y = 8194262071799636374777333149299054591496094336581705479886193509434994314309;
    
    uint256 constant IC74x = 2293410003511803307900292886768698712254744448589806147564881846783509955717;
    uint256 constant IC74y = 5203831902455199607865395495323314261004253249372094865302025405428371557504;
    
    uint256 constant IC75x = 18072985994095604780600545637172327118895992631028559592392747029650183978888;
    uint256 constant IC75y = 11404186818214964225560465450924024234868460349987155003089636903812063990692;
    
    uint256 constant IC76x = 15427204621072617586109726527041116129148698254174023406750820051770114511391;
    uint256 constant IC76y = 6348022216477060930487950694109024231173721288865569998515690244611489515589;
    
    uint256 constant IC77x = 3853744020160214657247886885784335243659145396737511350342451357405140141543;
    uint256 constant IC77y = 16734007401770650962005299904473039562569261270883308816358941759702264560309;
    
    uint256 constant IC78x = 11329450634618505916997885588611679322708462286923167913822128909488424496358;
    uint256 constant IC78y = 13877237758065215248054481455627717798952363962713220889812985785340712048508;
    
    uint256 constant IC79x = 2604694349233164821569896881281439009731534360884473676332876137942411072635;
    uint256 constant IC79y = 3772643257653121996125588148926967370063481832143136227403893345493639814012;
    
    uint256 constant IC80x = 14565881394359209573753801390376026219831304231611249535577579527085374939564;
    uint256 constant IC80y = 12371774103220268027248766045475159727243205662021007155101794078274040822186;
    
    uint256 constant IC81x = 19847193306621466742155053463712250085048022159270450262662756327163101765762;
    uint256 constant IC81y = 16687360938627462287241493987923291577542664815772416167885709215579465329066;
    
    uint256 constant IC82x = 1500471508389722572003603487150907157526059732974975203664824204341588998541;
    uint256 constant IC82y = 12637511870945516024780417297786569058325986270350487427575804343960594438058;
    
    uint256 constant IC83x = 3184532641139036865605300397104919898511437418990700632429567168747566293033;
    uint256 constant IC83y = 11833005140774661717193874406795598685530359315835376520897250435134795812885;
    
    uint256 constant IC84x = 3280835050749219612346539775099463018068998534621256134419225319962626231457;
    uint256 constant IC84y = 17925105273990300105305742881695598399119057799479768834402329382376847215632;
    
    uint256 constant IC85x = 499423807894137988115899363966708435937919249781530168687033629999222739842;
    uint256 constant IC85y = 21399872243595133975465457471151499932494080108321998728468967486781083783982;
    
    uint256 constant IC86x = 4487685878352608655794256627747875753258198099456956321829035549346612087074;
    uint256 constant IC86y = 3831754904572298687231502139396854401970760182736440356302151031758267161973;
    
    uint256 constant IC87x = 19566666351700315844535534319542030048695063277482588404845028256544301477857;
    uint256 constant IC87y = 10389972117503222091318920619597871545285747710158888038371677668621562035442;
    
    uint256 constant IC88x = 4581363159996287398106425309332642073312221132566604494470311382626028564308;
    uint256 constant IC88y = 7949723992382675480665263212038195584349270008703596036127764024851366742605;
    
    uint256 constant IC89x = 3572492515826473569806333152088994140118715891626962554138595121996636834586;
    uint256 constant IC89y = 17201973611716778160859198821730415335378865960160407456914590220267805521629;
    
    uint256 constant IC90x = 2935974286976755329087415910484228152083344977730965651188439524655096200905;
    uint256 constant IC90y = 9332714480188461934800476491342440506159506357814973091346401622395468924416;
    
    uint256 constant IC91x = 17125860654984486771810728658366620063836800157342958781183601100389281068156;
    uint256 constant IC91y = 20142074058811742147268453668288925186482879608183278356131980777616134976348;
    
    uint256 constant IC92x = 13132669062520098139718231682293946407770362720628429894097674255761237597643;
    uint256 constant IC92y = 13600969245463933864094517657305877851998703352566970341798740530477712419794;
    
    uint256 constant IC93x = 3940379656159295545321213809575065100593482728791534199927773247897168113772;
    uint256 constant IC93y = 15088748933068285217554914932030051661497072794353198652789060523311786455060;
    
    uint256 constant IC94x = 7559751173614951365007214746646431621997572022594422358494186091380282364021;
    uint256 constant IC94y = 19465439939083103141573605636489874918680910706327116710138604817944448674599;
    
    uint256 constant IC95x = 17858091706731029149236729951112102092152224745415763501846678762132392522537;
    uint256 constant IC95y = 15227520103678999290343240099596076269934816213539950927637507117753081683581;
    
    uint256 constant IC96x = 4387567151599601168388930750717942194902584253721135602471495275325661401267;
    uint256 constant IC96y = 9650337391592644525011410600114083275141976899761787901757934819764803154606;
    
    uint256 constant IC97x = 883363781543258972099202581197414739670139430991420316717668498262248166266;
    uint256 constant IC97y = 9133408829355480614464976246944757191357655082269389387369705825181834090033;
    
    uint256 constant IC98x = 13223974397640033882290505435433793825635414023804391756061767494222050873650;
    uint256 constant IC98y = 20921441753103228529419310393591290265903742856496914546365001627469997906990;
    
    uint256 constant IC99x = 15444520679119022809819726970508637320704895277253849540704825317311179321996;
    uint256 constant IC99y = 19876019464796319004568842639529096353867454485889418925944204683613822338505;
    
    uint256 constant IC100x = 5991148869559087864931779554903620397374468485375113344058159019195430844212;
    uint256 constant IC100y = 6311472459675860822416827290471303808172796487773774227757391592551303677660;
    
    uint256 constant IC101x = 12138148230261522395422709396097003796571547172236123963313267733610561834364;
    uint256 constant IC101y = 20056834099259998555677140329148112300406881987518725841288843473504116963802;
    
    uint256 constant IC102x = 1303413817984061438643302376129890247867428800281726958157185998758323367061;
    uint256 constant IC102y = 14257070100281198416032548189251360283724224493406367228190581143566963281749;
    
    uint256 constant IC103x = 12984592842223050268161838815778414458627987983011789736937360293370433766959;
    uint256 constant IC103y = 6567585105467064965781817781900742944887680768385748738282150943466244213141;
    
    uint256 constant IC104x = 10892533843433570394854511841347939059976971123958618083224214136005773675102;
    uint256 constant IC104y = 13931677950778704199767712518477885891118022876482578961031348677290628489136;
    
    uint256 constant IC105x = 17962323399948716179363979445575275882488777799622678896185283462914887256320;
    uint256 constant IC105y = 5117589734598365870389797365654351080097465546076618923091324647439097402740;
    
    uint256 constant IC106x = 14865381579293689445723457581804814599310957125030345861317065743703775684900;
    uint256 constant IC106y = 19288959714174324756104887818774375115995693716099865062380586172936357190442;
    
    uint256 constant IC107x = 5551565859637655734253202967684747448923771375495241094598961649461801844996;
    uint256 constant IC107y = 13703975569348324758972167710400096078675499009631556305874202864057754800326;
    
    uint256 constant IC108x = 5243160400702164649551311264664652729005723473292542995362369595915989069937;
    uint256 constant IC108y = 8975667779218828035182664883968568478498187085284671861737069263233660352512;
    
    uint256 constant IC109x = 9086922785209606195048419721724324391257637826955903498646503030900384073462;
    uint256 constant IC109y = 6122058266870330423305680105278983154521916897421475020238347575351642076140;
    
    uint256 constant IC110x = 21002829592130016871102564361222694478727106414781816808508298280308673554508;
    uint256 constant IC110y = 13153245788582672693882307454945939472079802464160620867808945574379490551076;
    
    uint256 constant IC111x = 7178153250492803570643302985823236317017948870023177542736371520971356809838;
    uint256 constant IC111y = 10323537918417638549883219427507474612154502205317537424807862616872942417288;
    
    uint256 constant IC112x = 21537925769387322505424441649331039784374982428844087904910724670814238042272;
    uint256 constant IC112y = 7333255079858593454341705012794230281842888725873201277240481367184592317655;
    
    uint256 constant IC113x = 15453490880188825552037540899398485330232288267939737718586095805648543858312;
    uint256 constant IC113y = 7944622648078574679833747097996954448372320188567330141816930006767463291513;
    
    uint256 constant IC114x = 10131392997004217587763104485858925246588012465490945537894132571030928472114;
    uint256 constant IC114y = 19359217536529340291839278355895984479527684280068650575612940102197703200874;
    
    uint256 constant IC115x = 2741075643883914784670183774220038029332129910337060014159935556132070549952;
    uint256 constant IC115y = 6356711723700268288013300815479888664128474892112647495880593772244822689197;
    
    uint256 constant IC116x = 15521964847134797695190815360204847627261361377771959385703365861505238011571;
    uint256 constant IC116y = 4056406949933688327862439376396051720178793188577289767241916650743212571382;
    
    uint256 constant IC117x = 20386940801877662886720451243488843109815547424141179183199429645367671946198;
    uint256 constant IC117y = 5209374472731220855997457647252365812029669042298645292356455600490187231573;
    
    uint256 constant IC118x = 9505237598953609253039197800283043089922594196363852989358333193156359864325;
    uint256 constant IC118y = 8401731804129327185386693907733728268397442010041963890756037751983575483056;
    
    uint256 constant IC119x = 12773132048753033480136675704780551471929240733089947989241428145448642324961;
    uint256 constant IC119y = 7853634239882521982583356385171071557128380752524610698033074666154031228320;
    
    uint256 constant IC120x = 6233441486755077278201706760239622274968820525395694834608858059779296619248;
    uint256 constant IC120y = 6744034503139786140782258122124245639167140786121903356082190594258790185640;
    
    uint256 constant IC121x = 19474425558594785295465275627331864141420657271438855170093733621914419276880;
    uint256 constant IC121y = 13836031219367211808468748881340078326669402639230994895919501623320313281722;
    
    uint256 constant IC122x = 10314900892567978705715578287860216548661892330417091952761474371006075164581;
    uint256 constant IC122y = 7139230033939441913525731074255990707042941342270751127283475592061552130260;
    
    uint256 constant IC123x = 13103817686077842258603203351202951733429784824255421590261333103125255679296;
    uint256 constant IC123y = 19854641176735681069881890379936880100430775980529802290891724288357618281711;
    
    uint256 constant IC124x = 17680142956882597438550957973232220611618391207960928138051923493574024432958;
    uint256 constant IC124y = 21153504946827697545435563440707033371437820666780706417962589821506287151484;
    
    uint256 constant IC125x = 234908788232408120566452707655397846149021397235322094725633943875787228605;
    uint256 constant IC125y = 15985713961036788819709541865083578273279873159432951404413090963548343820917;
    
    uint256 constant IC126x = 11263775033684878532677030965914282395347357979656682182497131404584402570712;
    uint256 constant IC126y = 16380294801287195678946108534866558171331683187500945858676172725250077547120;
    
    uint256 constant IC127x = 12987170233579651817023832601621707370887836303611178897293605041691016343239;
    uint256 constant IC127y = 12988800815394668044381388592796200141654226593799224229153915283324485492713;
    
    uint256 constant IC128x = 12326222510928031569336113565967305296979569319633179932186352678309214243097;
    uint256 constant IC128y = 18573923254678817344391357647147286813612886238368327818052285568980488743621;
    
    uint256 constant IC129x = 9107541909750011531957496091664028019797074631594047796774431758704252102216;
    uint256 constant IC129y = 13748262617789048194199838825655832560792254721336317314086999776344324392322;
    
    uint256 constant IC130x = 7715433203883577076051903989147207442879350239095858770290144607830767899730;
    uint256 constant IC130y = 7766773407242258222210772706280589194523974471552964327709306014729895055138;
    
    uint256 constant IC131x = 3305772391469910090390636815287507315316919010411655510952953289032890262945;
    uint256 constant IC131y = 15142439610624131633330803940354804723293014901231364422868903821287731133884;
    
    uint256 constant IC132x = 821917918022357070941703797179006790717004520993429100558007161165178699144;
    uint256 constant IC132y = 8579052576797463240257938749945240771865610495195897550073324622912104749249;
    
    uint256 constant IC133x = 8880482937431418003709498840953566621551205562076641732753725990830067109580;
    uint256 constant IC133y = 15242409267403394923805848827825078320263781692802072148928834633352328029648;
    
    uint256 constant IC134x = 2489181374369389313195223035978567616586312920468570817249126500728583370589;
    uint256 constant IC134y = 21604426109691383619002583106588348083929210135777561388693475427712236313758;
    
    uint256 constant IC135x = 5384331057063805199796881024803899101861187968228052137621210316996419914896;
    uint256 constant IC135y = 8510235292008141088815964344492273847724412463512252594096911193268276138268;
    
    uint256 constant IC136x = 11882973002097654731770153941182510682572641437027088623773894774898404400253;
    uint256 constant IC136y = 19983418256505787170453986253208017253514558183408731151757849538392354606690;
    
    uint256 constant IC137x = 19440872975128451735932753819318563689041791462798814953864894508278476584745;
    uint256 constant IC137y = 13348543140882918441170449956252470844452386381709233514130436450386854065189;
    
    uint256 constant IC138x = 3138223115791828675082148353902934634887557340465945485249274817586638540920;
    uint256 constant IC138y = 8797988764564466740466367552860913880335602310436135593220109624195973914552;
    
    uint256 constant IC139x = 8084539387687566196695723573272760309608031089641767918010786798117660010081;
    uint256 constant IC139y = 8095697777490181216011340411248661581154615541772394422237941672642193436780;
    
    uint256 constant IC140x = 8324265136859621733057565440698612313405418953968039817604225873060853455398;
    uint256 constant IC140y = 18548861470790502673442772484063089340335826921133923445252674180223074950074;
    
    uint256 constant IC141x = 5778388556649744933924022910534415787744398643394558790483188099605383272080;
    uint256 constant IC141y = 17122965242690014630968664454270810927199329613850968894445921606276310409932;
    
    uint256 constant IC142x = 21171514721891382396236367815155215604466458582731114567247772704918796329915;
    uint256 constant IC142y = 20220653073327973257659965049385871767458421135369966447605593943184037040068;
    
    uint256 constant IC143x = 2154761835680561212127546589350291792195219427145607681028747526117311735553;
    uint256 constant IC143y = 1613808628823121063940140568550341418562091268799777836977843070872569649228;
    
    uint256 constant IC144x = 7782844441077908801202438390663604256996516311804344120632297186635879462119;
    uint256 constant IC144y = 16268209162973108611532060430150034694336088077892942000767585273829816673163;
    
    uint256 constant IC145x = 13930637847338485256408578333977820144327655320500673101007294509094585330033;
    uint256 constant IC145y = 19492121933422325933198725272239881250208502377447149119325432169874602312;
    
    uint256 constant IC146x = 5184215278090981670817079673609279225732385363373396107739289164336661245500;
    uint256 constant IC146y = 20017871844364649232431900200067219626070719740183387474556736117178389036310;
    
    uint256 constant IC147x = 6174367390742579187623503961407624853834125749734532496777509444973495070773;
    uint256 constant IC147y = 13358683624200847764590969186629802178746474518127561996107551329974642712204;
    
    uint256 constant IC148x = 21409028613569012725031481188420230431819419536256647417695350127677804214304;
    uint256 constant IC148y = 7804192199893566936222889057836205443285313420897708885829033310855399956957;
    
    uint256 constant IC149x = 4371988870474773522867647883008067896592333564785132450695307656343076207299;
    uint256 constant IC149y = 1889674447027642685673651679617080513185448075101442191123865407869120006209;
    
    uint256 constant IC150x = 14937240451335793237959060051992336052559691226220243971921948537119810355315;
    uint256 constant IC150y = 5994541773776014285610032633168078644901940796895390564412150559394833082258;
    
    uint256 constant IC151x = 5182398500569246430422034972697304732028173471141162567901398741958599160579;
    uint256 constant IC151y = 1180766450753977572650706535278184133790242142938305538954021950867883833374;
    
    uint256 constant IC152x = 4016257604795169198167255181045188215158724492591093208723655883447133907327;
    uint256 constant IC152y = 7386000471192559656407907827803626858505060004464363216250475473719682450327;
    
    uint256 constant IC153x = 3847672381563400878391402933812626374759208201736805830993228978215054991142;
    uint256 constant IC153y = 4098170470727557475124800152798071372698524299227829380251422512313146909471;
    
    uint256 constant IC154x = 2960137715486752048883426798554477509469712707918986894090887652921149635428;
    uint256 constant IC154y = 20267115169294199295215379509073836505822894072647138275116187841543497727894;
    
    uint256 constant IC155x = 16016567357990102929138923524395899927656122895155136473896965611092918687350;
    uint256 constant IC155y = 1392544017170582818566396681208886249115983546883626357489867732084404692634;
    
    uint256 constant IC156x = 9921219368660948320539603358161071901456854135191870049434881242774767725265;
    uint256 constant IC156y = 606909037246612400938492668786256385902017689246839598053221207038450689944;
    
    uint256 constant IC157x = 18521478488498724842684519542910583477250646020015818436393885275771113479150;
    uint256 constant IC157y = 18038024139546564794124616500622458175620381203899909801534527952278890914716;
    
    uint256 constant IC158x = 3536743211456743321615046035262455385864997011123103519417938841409567398569;
    uint256 constant IC158y = 16644416518398846820481463486092444168971561320260421148349950168284228165786;
    
    uint256 constant IC159x = 14966416212429465607989589577238971712088231747122829677279033783160578102031;
    uint256 constant IC159y = 9494976261932881124494440885825650015102882009444972658066518164224509902819;
    
    uint256 constant IC160x = 16576114508908636923665962255946040871703720149898871621270401165735063755703;
    uint256 constant IC160y = 9132452471522187546065784347316475806474909948475144036377700316353106629211;
    
    uint256 constant IC161x = 12566404258995613259784982528993799699837982667923484747697696166574707735890;
    uint256 constant IC161y = 6509831236540082342210837151005205250074451327822293294607280593051059088143;
    
    uint256 constant IC162x = 20457813937969145911420523245039245490948909250674644547797677781873342661376;
    uint256 constant IC162y = 14302267926538254043649431995035914242271037431396281153678953175560143452963;
    
    uint256 constant IC163x = 5536836088203421492632175334703483151175125524514385668400608351631290979797;
    uint256 constant IC163y = 10197123068926113252394084984904037144665067975566276536969176552503010212481;
    
    uint256 constant IC164x = 12156646821493467488934134701248619987994097709400238586479119671305497920885;
    uint256 constant IC164y = 935429219731367169863340223526233811814195532350637964893773915955386220951;
    
    uint256 constant IC165x = 16390931267612842219089842345009913094303291794478514011607692956666580906489;
    uint256 constant IC165y = 20100910242585815918741255962135633473985688254750112692503205270660180357997;
    
    uint256 constant IC166x = 15812321015438745696052739363682397219961256860910079788794512628618261963251;
    uint256 constant IC166y = 11014118394713751656818858725520954085705043637838518140477564819401435623091;
    
    uint256 constant IC167x = 8935736343710469458220948583763804505010226381852644234236491217241437993300;
    uint256 constant IC167y = 19289835295553715838633632500164522419879675754183295621241146644468569117012;
    
    uint256 constant IC168x = 2603022403168319005386068468620722069350403332596160270542489641182430424421;
    uint256 constant IC168y = 12600747760865422790426829196055738137451628522488253368821123204544616901748;
    
    uint256 constant IC169x = 3729226151468266827644771977325587007557542659425564494189918758810373077602;
    uint256 constant IC169y = 12910386652058876580091831710551621154666082497945299326523036719831488781218;
    
    uint256 constant IC170x = 6120830668661264417145345419263178748471016486996972541811140092194087502263;
    uint256 constant IC170y = 4242271131992554636912136964627295426016256115329689657160380119704241099777;
    
    uint256 constant IC171x = 7486287132906214488628238370695774654717052302591698713941260543436293308780;
    uint256 constant IC171y = 601842318399354780716333235258991396934694823632387793600556654338019718326;
    
    uint256 constant IC172x = 12000604290206506073426195524105689420869526066066338672402841129198321782048;
    uint256 constant IC172y = 9883829008346575661121211973278181947850850322540922756081793466524213551945;
    
    uint256 constant IC173x = 8710257541083804059271900609113343472964880689993935367661838779726797411438;
    uint256 constant IC173y = 10137427026481671170996684774908984168500419338706175292615309113319178137280;
    
    uint256 constant IC174x = 469416505263285391401665822569139424351459873913253754536575079511779380433;
    uint256 constant IC174y = 19600011582948120313092075290429873815990980925020225729506987452728875632450;
    
    uint256 constant IC175x = 266498860872015116485271307407782540744081872917893390826384621579453457705;
    uint256 constant IC175y = 16854519593923599999719506243451562252653966042062018930623757056132392189530;
    
    uint256 constant IC176x = 10490220385614026912086975946289415960735507308499645072960867612879520466511;
    uint256 constant IC176y = 13493064656004355413450894766134404029542323772093292008502329843960939809265;
    
    uint256 constant IC177x = 10468102152957461012631138375488249972963569329136082657989431967153782823318;
    uint256 constant IC177y = 754690141908365847745777233011013206590157649116129191050633676541564455182;
    
    uint256 constant IC178x = 12409839288212503459362558748418498189321265637063070407977095065759075404971;
    uint256 constant IC178y = 5982619305688410126955362490518410952258529782812936980999290581924415363570;
    
    uint256 constant IC179x = 12556506653594305547520780057883876415414925525907561845883997930005024414109;
    uint256 constant IC179y = 20163687074755774577300801514790123527465071027759950780702976635810802950398;
    
    uint256 constant IC180x = 13631274657326797266323821365249996940174541588868908107820028053043471345578;
    uint256 constant IC180y = 9301882436585934089371952335781901137634210622182098038494606834005882925646;
    
    uint256 constant IC181x = 12781069264501230515039437875311491433176126161128539807234675649779250478162;
    uint256 constant IC181y = 956447436194464545630662624276844517271888451831616004788240960012888505086;
    
    uint256 constant IC182x = 15157024900580374249075179461852067351549424654394948196864270588058096210218;
    uint256 constant IC182y = 16747292577420769436093831078606071384424547555868961823393797772090661881196;
    
    uint256 constant IC183x = 2203327990692840995500893328819830555480776296533742714470498017661546461984;
    uint256 constant IC183y = 5954608354096684078311626657293750277016896377839835491855984473793232634412;
    
    uint256 constant IC184x = 18341906640714656528631005981058997953661397974591160984720478042897872987130;
    uint256 constant IC184y = 18888106326851360530250470452954802854514129511551212215644646337870900074948;
    
    uint256 constant IC185x = 1058486145323210039522572159746196055927698478580327389867700801581072409297;
    uint256 constant IC185y = 12696138499043769663133920245353025343900351229726068591369316284165385242501;
    
    uint256 constant IC186x = 17920083647087328962038943173494720704241474397370386605098471789867641220523;
    uint256 constant IC186y = 8191037851986666223622640239110919019841064609972084273803749998669541271356;
    
    uint256 constant IC187x = 9141057886337229952055500957383793087459685008326361150672986530635686396760;
    uint256 constant IC187y = 16143962172966790919675974727575806962350827452127267035731869501910845755089;
    
    uint256 constant IC188x = 5854311348243678534922991614292388485651823066471702655589631209078846165936;
    uint256 constant IC188y = 490995206398164282724395729196344842626324297763825400953657181354974621050;
    
    uint256 constant IC189x = 2135255813016186916192885679432717733375034902404715719657882578016827838583;
    uint256 constant IC189y = 19781052570450717533701940469035771647288192958856677501625674595588032376404;
    
    uint256 constant IC190x = 14892351656730022029401520864350707465527787302759390739099176509173932678199;
    uint256 constant IC190y = 21724472225000947659119405241325287512550935570667041929822679147615536933194;
    
    uint256 constant IC191x = 9309346750045530350124127738370340924707599634327742718757220775992841746023;
    uint256 constant IC191y = 20454491945937083983614518893535736300403739742327400273232627378920406654185;
    
    uint256 constant IC192x = 12209510373467059245236084119136876595324977117710640798682637339933185111483;
    uint256 constant IC192y = 17457451004820072741681798590699898751769159402342501053399582119874722170790;
    
    uint256 constant IC193x = 14413353574239914885508454512073666161581744036160999326388198076132200667179;
    uint256 constant IC193y = 11943987968241969564386860070525753296329523298694833624859751646723054747111;
    
    uint256 constant IC194x = 5162747538779028207848807531402462662086227701164930417860315869736449708256;
    uint256 constant IC194y = 406290751910400683238903478147678968131321710848560674673394587208768865608;
    
    uint256 constant IC195x = 2089395503070272028290897615986609896013615236092373428550320358978539941249;
    uint256 constant IC195y = 18713276647720572615466665288567298805605118470321287344255473060032140123985;
    
    uint256 constant IC196x = 16881468955651499998891555159975495013043371735902585882967904706366801728163;
    uint256 constant IC196y = 3677963544212703634157617602878551713615627067958644043484940972143606244208;
    
    uint256 constant IC197x = 9887683035314854464151468402519345940601554263650717120433484685535642548742;
    uint256 constant IC197y = 19263603648903618441073093166652685657629547323677036668750526380695188694860;
    
    uint256 constant IC198x = 3348136558647814050409745093009796217741185787152717861333426424933365590209;
    uint256 constant IC198y = 11954028966621367900808369430473311461999698973264709937171216092231839937920;
    
    uint256 constant IC199x = 797623644700617521336170746303339878144798757695802950972272593191561661306;
    uint256 constant IC199y = 20502768434604569191343190731538325148296309524163511763390883017707420904569;
    
    uint256 constant IC200x = 11309423549319665722914017584504916414017571034249326624110539986246001854787;
    uint256 constant IC200y = 14877849105112634824190022840907005498539436594099376669909191355338123725324;
    
    uint256 constant IC201x = 10816877523089664233517082818838129903863463763599967040020038180955250480518;
    uint256 constant IC201y = 7448931740283679444926069334102815134148736491266160187501642678312123707879;
    
    uint256 constant IC202x = 10333854575813809778936400415952995003449038666907685839958297538045586135803;
    uint256 constant IC202y = 8185944805652805073027104713842382612184975564131493548418780286683394940896;
    
    uint256 constant IC203x = 3791631484620427923259652899275436105280831068806170139875703892184818921239;
    uint256 constant IC203y = 5815248134254325702167499283333320216457641555673563984459879608765471135682;
    
    uint256 constant IC204x = 21430688570209758955937415483888090589338099452693966715777244413943224316453;
    uint256 constant IC204y = 17034619085833636188764828307694033924337992979449960594944438297113915237351;
    
    uint256 constant IC205x = 12890007673100952580475721355958378583134453388565242786713664995678717434389;
    uint256 constant IC205y = 17123825327344463362014892988901137613344749666658045974387423933733930759636;
    
    uint256 constant IC206x = 258403814426028038743918587576500389993994512342471435827510183329722092959;
    uint256 constant IC206y = 3651066202048546764374353846032703157098284472201088442460114629479487607721;
    
    uint256 constant IC207x = 18438691529968158021841797902427897442850934207589785694227149638003190513556;
    uint256 constant IC207y = 17479775813570767725914984166976907511233173631982006025510580852204030358060;
    
    uint256 constant IC208x = 20919363873209509928312386607571149722316251719139308527493139803981288514010;
    uint256 constant IC208y = 5980321167907927297192843187904057231372371788316224896240381105646167463592;
    
    uint256 constant IC209x = 18328679216453173197194420878213986573685414697264605709273984306564077570453;
    uint256 constant IC209y = 15141852099209907406092579413672610178724736748062656351518005177111076351864;
    
    uint256 constant IC210x = 12552936713244598269808675746143456978195310696485440476922914878479491720819;
    uint256 constant IC210y = 2425068894669922957104128427090115064851645189715031835285719315060829498148;
    
    uint256 constant IC211x = 19361957966631059961867024708667253786311710939574224963556899223534852425619;
    uint256 constant IC211y = 18004568212010461217762718449021663802126402565412962568539157031368606420726;
    
    uint256 constant IC212x = 21821229647668186660010309902248911566852259754825098069068513698748072644165;
    uint256 constant IC212y = 10484618231637398028459767978879824313969979355903640215786658237627870842888;
    
    uint256 constant IC213x = 19892016417983540520393682713907714110126337691592055999996442692947925977745;
    uint256 constant IC213y = 7359086435143610718999125024624479924854002671026689460315614902234893402818;
    
    uint256 constant IC214x = 5870952405032967905144347004883005224200421105560800980131701352489449266838;
    uint256 constant IC214y = 17928656814006646133494607569775638712501813970476764521341440313198592160471;
    
    uint256 constant IC215x = 291632914645084349122591479277493280467873280095100068104962182872651312386;
    uint256 constant IC215y = 447066027577030835098744286313203083079157616387027928981083530472800742454;
    
    uint256 constant IC216x = 1894143979238103725003262327230001345569736200850091263397444362835186220267;
    uint256 constant IC216y = 18226528164219318255438396557681218150703790963062251578500519438586355519695;
    
    uint256 constant IC217x = 17919830734309701494636057411029519700453979754984115205744444258848929915833;
    uint256 constant IC217y = 14915607944309677334973882256013446888590411655166171723639074492533400902018;
    
    uint256 constant IC218x = 11167930289813876213860692775783034826939519531062416590673319292162995607150;
    uint256 constant IC218y = 13801149699412066538137566385892744018288209649321364711889630735833885820503;
    
    uint256 constant IC219x = 8702318402627825511407796813169233002139213754197147586877418615097505964944;
    uint256 constant IC219y = 5486496144321264703875638176644309118492705573565431548420381542562981783879;
    
    uint256 constant IC220x = 7216250306149110965191404653544758181811825013355144648820000782827905803907;
    uint256 constant IC220y = 8629516048265272020651981786521698297088166134947831920105434535548108133408;
    
    uint256 constant IC221x = 4784358497017874457176732165672097585049553257019265812164276559707988917815;
    uint256 constant IC221y = 12622481795764312394325659420656947703041395004731124292337651808801410411;
    
    uint256 constant IC222x = 4919537319347122047648603873918816504733340243184059758223532003024470298979;
    uint256 constant IC222y = 20418435461363786943912392655173395800591738755565706232655858988266462343188;
    
    uint256 constant IC223x = 10959679189001447827393809001405549801520058137517808523646314409679283925017;
    uint256 constant IC223y = 10642890615518239468509990461025249214928140929569589947815642508297080647424;
    
    uint256 constant IC224x = 6816345900620444532152516043684089008687465530073986898726665835637252776877;
    uint256 constant IC224y = 7465568802917815202638530195834865990289651059308927866241834110219126482714;
    
    uint256 constant IC225x = 18873021401472786533493143086556649415286536687475598437640325060285448521608;
    uint256 constant IC225y = 20704501772094628934367297200049510670882202605266366058054869232217552495536;
    
    uint256 constant IC226x = 2469168432830081333807998671299620224541937034061116099396428238474350939775;
    uint256 constant IC226y = 5532308826896857201279716835386835918196002388365622226694146114313644254814;
    
    uint256 constant IC227x = 15080922446477438296859862854095744563386185281947295246681214961593820756;
    uint256 constant IC227y = 4175498074633817084313027832101924507656313750386967680817124558748713414682;
    
    uint256 constant IC228x = 7572549455343101548111173412901373653880270637855180042643322967207230602814;
    uint256 constant IC228y = 2542757814655146710974629899758552867719173591331134428804358014299378123066;
    
    uint256 constant IC229x = 20603952902042583017090109859537958130511710432475504115968825145195623372021;
    uint256 constant IC229y = 11851483672953376525028525621594823366136532658902456119194668443479040582331;
    
    uint256 constant IC230x = 18857439764602359730221138110844177552773967360375584770461219423547456805166;
    uint256 constant IC230y = 7749503757411934966911532316546913337340421053807945344187729774993894882985;
    
    uint256 constant IC231x = 3139689646964314986320157288461433443002378505282979261606826384749526423736;
    uint256 constant IC231y = 16197452039304847003714609318597096840470511184380814337547386621054055940829;
    
    uint256 constant IC232x = 19426624172096794635495087778739167835856992040819272730948222869937964893300;
    uint256 constant IC232y = 8818888005843709060862439148266076652915012732891058193027661490822592706806;
    
    uint256 constant IC233x = 10931214305535577844479376463190137631409659717301926879058943263143035322552;
    uint256 constant IC233y = 12021009194589260359792722374371324152171867938000962543527444752540447510390;
    
    uint256 constant IC234x = 16308496533260852841503261617568862573647484059391673210574125394823812846992;
    uint256 constant IC234y = 11491202579967769434323603001551423489430496427876220037897812654955138173368;
    
    uint256 constant IC235x = 10807435824905373813735073539790324538413573785519231927045111548067862808966;
    uint256 constant IC235y = 6333579139524199833525036252303214805298586930727628861924328373423220258257;
    
    uint256 constant IC236x = 6882046284086247089102002958628329014361601126811479205661489519910587353666;
    uint256 constant IC236y = 7623846043153699786539370838011939352988412777037937335406858774374586820527;
    
    uint256 constant IC237x = 3984408330298347021526943027064199408991250794662668985139640066687276602797;
    uint256 constant IC237y = 15139887952820299225124271977755590510804987222534661528316215950558229563217;
    
    uint256 constant IC238x = 21709365158127218011234621695717459338907923309871773967035490985671954476947;
    uint256 constant IC238y = 1881645711264436072389479664813410122367577935305667016806321302996788546288;
    
    uint256 constant IC239x = 20823078344640877481341018981740143174686425424015933034974526606785310252651;
    uint256 constant IC239y = 14002909833420627352556557733089260779105824234410673829133475641566850034565;
    
    uint256 constant IC240x = 4358562718955873039880013008126817901700680889266367916275296038894969781749;
    uint256 constant IC240y = 17482707667908744575163540599330325302225030974339984679955530427237001329856;
    
 
    // Memory data
    uint16 constant pVk = 0;
    uint16 constant pPairing = 128;

    uint16 constant pLastMem = 896;

    function verifyProof(uint[2] calldata _pA, uint[2][2] calldata _pB, uint[2] calldata _pC, uint[240] calldata _pubSignals) public view returns (bool) {
        assembly {
            function checkField(v) {
                if iszero(lt(v, r)) {
                    mstore(0, 0)
                    return(0, 0x20)
                }
            }
            
            // G1 function to multiply a G1 value(x,y) to value in an address
            function g1_mulAccC(pR, x, y, s) {
                let success
                let mIn := mload(0x40)
                mstore(mIn, x)
                mstore(add(mIn, 32), y)
                mstore(add(mIn, 64), s)

                success := staticcall(sub(gas(), 2000), 7, mIn, 96, mIn, 64)

                if iszero(success) {
                    mstore(0, 0)
                    return(0, 0x20)
                }

                mstore(add(mIn, 64), mload(pR))
                mstore(add(mIn, 96), mload(add(pR, 32)))

                success := staticcall(sub(gas(), 2000), 6, mIn, 128, pR, 64)

                if iszero(success) {
                    mstore(0, 0)
                    return(0, 0x20)
                }
            }

            function checkPairing(pA, pB, pC, pubSignals, pMem) -> isOk {
                let _pPairing := add(pMem, pPairing)
                let _pVk := add(pMem, pVk)

                mstore(_pVk, IC0x)
                mstore(add(_pVk, 32), IC0y)

                // Compute the linear combination vk_x
                
                g1_mulAccC(_pVk, IC1x, IC1y, calldataload(add(pubSignals, 0)))
                
                g1_mulAccC(_pVk, IC2x, IC2y, calldataload(add(pubSignals, 32)))
                
                g1_mulAccC(_pVk, IC3x, IC3y, calldataload(add(pubSignals, 64)))
                
                g1_mulAccC(_pVk, IC4x, IC4y, calldataload(add(pubSignals, 96)))
                
                g1_mulAccC(_pVk, IC5x, IC5y, calldataload(add(pubSignals, 128)))
                
                g1_mulAccC(_pVk, IC6x, IC6y, calldataload(add(pubSignals, 160)))
                
                g1_mulAccC(_pVk, IC7x, IC7y, calldataload(add(pubSignals, 192)))
                
                g1_mulAccC(_pVk, IC8x, IC8y, calldataload(add(pubSignals, 224)))
                
                g1_mulAccC(_pVk, IC9x, IC9y, calldataload(add(pubSignals, 256)))
                
                g1_mulAccC(_pVk, IC10x, IC10y, calldataload(add(pubSignals, 288)))
                
                g1_mulAccC(_pVk, IC11x, IC11y, calldataload(add(pubSignals, 320)))
                
                g1_mulAccC(_pVk, IC12x, IC12y, calldataload(add(pubSignals, 352)))
                
                g1_mulAccC(_pVk, IC13x, IC13y, calldataload(add(pubSignals, 384)))
                
                g1_mulAccC(_pVk, IC14x, IC14y, calldataload(add(pubSignals, 416)))
                
                g1_mulAccC(_pVk, IC15x, IC15y, calldataload(add(pubSignals, 448)))
                
                g1_mulAccC(_pVk, IC16x, IC16y, calldataload(add(pubSignals, 480)))
                
                g1_mulAccC(_pVk, IC17x, IC17y, calldataload(add(pubSignals, 512)))
                
                g1_mulAccC(_pVk, IC18x, IC18y, calldataload(add(pubSignals, 544)))
                
                g1_mulAccC(_pVk, IC19x, IC19y, calldataload(add(pubSignals, 576)))
                
                g1_mulAccC(_pVk, IC20x, IC20y, calldataload(add(pubSignals, 608)))
                
                g1_mulAccC(_pVk, IC21x, IC21y, calldataload(add(pubSignals, 640)))
                
                g1_mulAccC(_pVk, IC22x, IC22y, calldataload(add(pubSignals, 672)))
                
                g1_mulAccC(_pVk, IC23x, IC23y, calldataload(add(pubSignals, 704)))
                
                g1_mulAccC(_pVk, IC24x, IC24y, calldataload(add(pubSignals, 736)))
                
                g1_mulAccC(_pVk, IC25x, IC25y, calldataload(add(pubSignals, 768)))
                
                g1_mulAccC(_pVk, IC26x, IC26y, calldataload(add(pubSignals, 800)))
                
                g1_mulAccC(_pVk, IC27x, IC27y, calldataload(add(pubSignals, 832)))
                
                g1_mulAccC(_pVk, IC28x, IC28y, calldataload(add(pubSignals, 864)))
                
                g1_mulAccC(_pVk, IC29x, IC29y, calldataload(add(pubSignals, 896)))
                
                g1_mulAccC(_pVk, IC30x, IC30y, calldataload(add(pubSignals, 928)))
                
                g1_mulAccC(_pVk, IC31x, IC31y, calldataload(add(pubSignals, 960)))
                
                g1_mulAccC(_pVk, IC32x, IC32y, calldataload(add(pubSignals, 992)))
                
                g1_mulAccC(_pVk, IC33x, IC33y, calldataload(add(pubSignals, 1024)))
                
                g1_mulAccC(_pVk, IC34x, IC34y, calldataload(add(pubSignals, 1056)))
                
                g1_mulAccC(_pVk, IC35x, IC35y, calldataload(add(pubSignals, 1088)))
                
                g1_mulAccC(_pVk, IC36x, IC36y, calldataload(add(pubSignals, 1120)))
                
                g1_mulAccC(_pVk, IC37x, IC37y, calldataload(add(pubSignals, 1152)))
                
                g1_mulAccC(_pVk, IC38x, IC38y, calldataload(add(pubSignals, 1184)))
                
                g1_mulAccC(_pVk, IC39x, IC39y, calldataload(add(pubSignals, 1216)))
                
                g1_mulAccC(_pVk, IC40x, IC40y, calldataload(add(pubSignals, 1248)))
                
                g1_mulAccC(_pVk, IC41x, IC41y, calldataload(add(pubSignals, 1280)))
                
                g1_mulAccC(_pVk, IC42x, IC42y, calldataload(add(pubSignals, 1312)))
                
                g1_mulAccC(_pVk, IC43x, IC43y, calldataload(add(pubSignals, 1344)))
                
                g1_mulAccC(_pVk, IC44x, IC44y, calldataload(add(pubSignals, 1376)))
                
                g1_mulAccC(_pVk, IC45x, IC45y, calldataload(add(pubSignals, 1408)))
                
                g1_mulAccC(_pVk, IC46x, IC46y, calldataload(add(pubSignals, 1440)))
                
                g1_mulAccC(_pVk, IC47x, IC47y, calldataload(add(pubSignals, 1472)))
                
                g1_mulAccC(_pVk, IC48x, IC48y, calldataload(add(pubSignals, 1504)))
                
                g1_mulAccC(_pVk, IC49x, IC49y, calldataload(add(pubSignals, 1536)))
                
                g1_mulAccC(_pVk, IC50x, IC50y, calldataload(add(pubSignals, 1568)))
                
                g1_mulAccC(_pVk, IC51x, IC51y, calldataload(add(pubSignals, 1600)))
                
                g1_mulAccC(_pVk, IC52x, IC52y, calldataload(add(pubSignals, 1632)))
                
                g1_mulAccC(_pVk, IC53x, IC53y, calldataload(add(pubSignals, 1664)))
                
                g1_mulAccC(_pVk, IC54x, IC54y, calldataload(add(pubSignals, 1696)))
                
                g1_mulAccC(_pVk, IC55x, IC55y, calldataload(add(pubSignals, 1728)))
                
                g1_mulAccC(_pVk, IC56x, IC56y, calldataload(add(pubSignals, 1760)))
                
                g1_mulAccC(_pVk, IC57x, IC57y, calldataload(add(pubSignals, 1792)))
                
                g1_mulAccC(_pVk, IC58x, IC58y, calldataload(add(pubSignals, 1824)))
                
                g1_mulAccC(_pVk, IC59x, IC59y, calldataload(add(pubSignals, 1856)))
                
                g1_mulAccC(_pVk, IC60x, IC60y, calldataload(add(pubSignals, 1888)))
                
                g1_mulAccC(_pVk, IC61x, IC61y, calldataload(add(pubSignals, 1920)))
                
                g1_mulAccC(_pVk, IC62x, IC62y, calldataload(add(pubSignals, 1952)))
                
                g1_mulAccC(_pVk, IC63x, IC63y, calldataload(add(pubSignals, 1984)))
                
                g1_mulAccC(_pVk, IC64x, IC64y, calldataload(add(pubSignals, 2016)))
                
                g1_mulAccC(_pVk, IC65x, IC65y, calldataload(add(pubSignals, 2048)))
                
                g1_mulAccC(_pVk, IC66x, IC66y, calldataload(add(pubSignals, 2080)))
                
                g1_mulAccC(_pVk, IC67x, IC67y, calldataload(add(pubSignals, 2112)))
                
                g1_mulAccC(_pVk, IC68x, IC68y, calldataload(add(pubSignals, 2144)))
                
                g1_mulAccC(_pVk, IC69x, IC69y, calldataload(add(pubSignals, 2176)))
                
                g1_mulAccC(_pVk, IC70x, IC70y, calldataload(add(pubSignals, 2208)))
                
                g1_mulAccC(_pVk, IC71x, IC71y, calldataload(add(pubSignals, 2240)))
                
                g1_mulAccC(_pVk, IC72x, IC72y, calldataload(add(pubSignals, 2272)))
                
                g1_mulAccC(_pVk, IC73x, IC73y, calldataload(add(pubSignals, 2304)))
                
                g1_mulAccC(_pVk, IC74x, IC74y, calldataload(add(pubSignals, 2336)))
                
                g1_mulAccC(_pVk, IC75x, IC75y, calldataload(add(pubSignals, 2368)))
                
                g1_mulAccC(_pVk, IC76x, IC76y, calldataload(add(pubSignals, 2400)))
                
                g1_mulAccC(_pVk, IC77x, IC77y, calldataload(add(pubSignals, 2432)))
                
                g1_mulAccC(_pVk, IC78x, IC78y, calldataload(add(pubSignals, 2464)))
                
                g1_mulAccC(_pVk, IC79x, IC79y, calldataload(add(pubSignals, 2496)))
                
                g1_mulAccC(_pVk, IC80x, IC80y, calldataload(add(pubSignals, 2528)))
                
                g1_mulAccC(_pVk, IC81x, IC81y, calldataload(add(pubSignals, 2560)))
                
                g1_mulAccC(_pVk, IC82x, IC82y, calldataload(add(pubSignals, 2592)))
                
                g1_mulAccC(_pVk, IC83x, IC83y, calldataload(add(pubSignals, 2624)))
                
                g1_mulAccC(_pVk, IC84x, IC84y, calldataload(add(pubSignals, 2656)))
                
                g1_mulAccC(_pVk, IC85x, IC85y, calldataload(add(pubSignals, 2688)))
                
                g1_mulAccC(_pVk, IC86x, IC86y, calldataload(add(pubSignals, 2720)))
                
                g1_mulAccC(_pVk, IC87x, IC87y, calldataload(add(pubSignals, 2752)))
                
                g1_mulAccC(_pVk, IC88x, IC88y, calldataload(add(pubSignals, 2784)))
                
                g1_mulAccC(_pVk, IC89x, IC89y, calldataload(add(pubSignals, 2816)))
                
                g1_mulAccC(_pVk, IC90x, IC90y, calldataload(add(pubSignals, 2848)))
                
                g1_mulAccC(_pVk, IC91x, IC91y, calldataload(add(pubSignals, 2880)))
                
                g1_mulAccC(_pVk, IC92x, IC92y, calldataload(add(pubSignals, 2912)))
                
                g1_mulAccC(_pVk, IC93x, IC93y, calldataload(add(pubSignals, 2944)))
                
                g1_mulAccC(_pVk, IC94x, IC94y, calldataload(add(pubSignals, 2976)))
                
                g1_mulAccC(_pVk, IC95x, IC95y, calldataload(add(pubSignals, 3008)))
                
                g1_mulAccC(_pVk, IC96x, IC96y, calldataload(add(pubSignals, 3040)))
                
                g1_mulAccC(_pVk, IC97x, IC97y, calldataload(add(pubSignals, 3072)))
                
                g1_mulAccC(_pVk, IC98x, IC98y, calldataload(add(pubSignals, 3104)))
                
                g1_mulAccC(_pVk, IC99x, IC99y, calldataload(add(pubSignals, 3136)))
                
                g1_mulAccC(_pVk, IC100x, IC100y, calldataload(add(pubSignals, 3168)))
                
                g1_mulAccC(_pVk, IC101x, IC101y, calldataload(add(pubSignals, 3200)))
                
                g1_mulAccC(_pVk, IC102x, IC102y, calldataload(add(pubSignals, 3232)))
                
                g1_mulAccC(_pVk, IC103x, IC103y, calldataload(add(pubSignals, 3264)))
                
                g1_mulAccC(_pVk, IC104x, IC104y, calldataload(add(pubSignals, 3296)))
                
                g1_mulAccC(_pVk, IC105x, IC105y, calldataload(add(pubSignals, 3328)))
                
                g1_mulAccC(_pVk, IC106x, IC106y, calldataload(add(pubSignals, 3360)))
                
                g1_mulAccC(_pVk, IC107x, IC107y, calldataload(add(pubSignals, 3392)))
                
                g1_mulAccC(_pVk, IC108x, IC108y, calldataload(add(pubSignals, 3424)))
                
                g1_mulAccC(_pVk, IC109x, IC109y, calldataload(add(pubSignals, 3456)))
                
                g1_mulAccC(_pVk, IC110x, IC110y, calldataload(add(pubSignals, 3488)))
                
                g1_mulAccC(_pVk, IC111x, IC111y, calldataload(add(pubSignals, 3520)))
                
                g1_mulAccC(_pVk, IC112x, IC112y, calldataload(add(pubSignals, 3552)))
                
                g1_mulAccC(_pVk, IC113x, IC113y, calldataload(add(pubSignals, 3584)))
                
                g1_mulAccC(_pVk, IC114x, IC114y, calldataload(add(pubSignals, 3616)))
                
                g1_mulAccC(_pVk, IC115x, IC115y, calldataload(add(pubSignals, 3648)))
                
                g1_mulAccC(_pVk, IC116x, IC116y, calldataload(add(pubSignals, 3680)))
                
                g1_mulAccC(_pVk, IC117x, IC117y, calldataload(add(pubSignals, 3712)))
                
                g1_mulAccC(_pVk, IC118x, IC118y, calldataload(add(pubSignals, 3744)))
                
                g1_mulAccC(_pVk, IC119x, IC119y, calldataload(add(pubSignals, 3776)))
                
                g1_mulAccC(_pVk, IC120x, IC120y, calldataload(add(pubSignals, 3808)))
                
                g1_mulAccC(_pVk, IC121x, IC121y, calldataload(add(pubSignals, 3840)))
                
                g1_mulAccC(_pVk, IC122x, IC122y, calldataload(add(pubSignals, 3872)))
                
                g1_mulAccC(_pVk, IC123x, IC123y, calldataload(add(pubSignals, 3904)))
                
                g1_mulAccC(_pVk, IC124x, IC124y, calldataload(add(pubSignals, 3936)))
                
                g1_mulAccC(_pVk, IC125x, IC125y, calldataload(add(pubSignals, 3968)))
                
                g1_mulAccC(_pVk, IC126x, IC126y, calldataload(add(pubSignals, 4000)))
                
                g1_mulAccC(_pVk, IC127x, IC127y, calldataload(add(pubSignals, 4032)))
                
                g1_mulAccC(_pVk, IC128x, IC128y, calldataload(add(pubSignals, 4064)))
                
                g1_mulAccC(_pVk, IC129x, IC129y, calldataload(add(pubSignals, 4096)))
                
                g1_mulAccC(_pVk, IC130x, IC130y, calldataload(add(pubSignals, 4128)))
                
                g1_mulAccC(_pVk, IC131x, IC131y, calldataload(add(pubSignals, 4160)))
                
                g1_mulAccC(_pVk, IC132x, IC132y, calldataload(add(pubSignals, 4192)))
                
                g1_mulAccC(_pVk, IC133x, IC133y, calldataload(add(pubSignals, 4224)))
                
                g1_mulAccC(_pVk, IC134x, IC134y, calldataload(add(pubSignals, 4256)))
                
                g1_mulAccC(_pVk, IC135x, IC135y, calldataload(add(pubSignals, 4288)))
                
                g1_mulAccC(_pVk, IC136x, IC136y, calldataload(add(pubSignals, 4320)))
                
                g1_mulAccC(_pVk, IC137x, IC137y, calldataload(add(pubSignals, 4352)))
                
                g1_mulAccC(_pVk, IC138x, IC138y, calldataload(add(pubSignals, 4384)))
                
                g1_mulAccC(_pVk, IC139x, IC139y, calldataload(add(pubSignals, 4416)))
                
                g1_mulAccC(_pVk, IC140x, IC140y, calldataload(add(pubSignals, 4448)))
                
                g1_mulAccC(_pVk, IC141x, IC141y, calldataload(add(pubSignals, 4480)))
                
                g1_mulAccC(_pVk, IC142x, IC142y, calldataload(add(pubSignals, 4512)))
                
                g1_mulAccC(_pVk, IC143x, IC143y, calldataload(add(pubSignals, 4544)))
                
                g1_mulAccC(_pVk, IC144x, IC144y, calldataload(add(pubSignals, 4576)))
                
                g1_mulAccC(_pVk, IC145x, IC145y, calldataload(add(pubSignals, 4608)))
                
                g1_mulAccC(_pVk, IC146x, IC146y, calldataload(add(pubSignals, 4640)))
                
                g1_mulAccC(_pVk, IC147x, IC147y, calldataload(add(pubSignals, 4672)))
                
                g1_mulAccC(_pVk, IC148x, IC148y, calldataload(add(pubSignals, 4704)))
                
                g1_mulAccC(_pVk, IC149x, IC149y, calldataload(add(pubSignals, 4736)))
                
                g1_mulAccC(_pVk, IC150x, IC150y, calldataload(add(pubSignals, 4768)))
                
                g1_mulAccC(_pVk, IC151x, IC151y, calldataload(add(pubSignals, 4800)))
                
                g1_mulAccC(_pVk, IC152x, IC152y, calldataload(add(pubSignals, 4832)))
                
                g1_mulAccC(_pVk, IC153x, IC153y, calldataload(add(pubSignals, 4864)))
                
                g1_mulAccC(_pVk, IC154x, IC154y, calldataload(add(pubSignals, 4896)))
                
                g1_mulAccC(_pVk, IC155x, IC155y, calldataload(add(pubSignals, 4928)))
                
                g1_mulAccC(_pVk, IC156x, IC156y, calldataload(add(pubSignals, 4960)))
                
                g1_mulAccC(_pVk, IC157x, IC157y, calldataload(add(pubSignals, 4992)))
                
                g1_mulAccC(_pVk, IC158x, IC158y, calldataload(add(pubSignals, 5024)))
                
                g1_mulAccC(_pVk, IC159x, IC159y, calldataload(add(pubSignals, 5056)))
                
                g1_mulAccC(_pVk, IC160x, IC160y, calldataload(add(pubSignals, 5088)))
                
                g1_mulAccC(_pVk, IC161x, IC161y, calldataload(add(pubSignals, 5120)))
                
                g1_mulAccC(_pVk, IC162x, IC162y, calldataload(add(pubSignals, 5152)))
                
                g1_mulAccC(_pVk, IC163x, IC163y, calldataload(add(pubSignals, 5184)))
                
                g1_mulAccC(_pVk, IC164x, IC164y, calldataload(add(pubSignals, 5216)))
                
                g1_mulAccC(_pVk, IC165x, IC165y, calldataload(add(pubSignals, 5248)))
                
                g1_mulAccC(_pVk, IC166x, IC166y, calldataload(add(pubSignals, 5280)))
                
                g1_mulAccC(_pVk, IC167x, IC167y, calldataload(add(pubSignals, 5312)))
                
                g1_mulAccC(_pVk, IC168x, IC168y, calldataload(add(pubSignals, 5344)))
                
                g1_mulAccC(_pVk, IC169x, IC169y, calldataload(add(pubSignals, 5376)))
                
                g1_mulAccC(_pVk, IC170x, IC170y, calldataload(add(pubSignals, 5408)))
                
                g1_mulAccC(_pVk, IC171x, IC171y, calldataload(add(pubSignals, 5440)))
                
                g1_mulAccC(_pVk, IC172x, IC172y, calldataload(add(pubSignals, 5472)))
                
                g1_mulAccC(_pVk, IC173x, IC173y, calldataload(add(pubSignals, 5504)))
                
                g1_mulAccC(_pVk, IC174x, IC174y, calldataload(add(pubSignals, 5536)))
                
                g1_mulAccC(_pVk, IC175x, IC175y, calldataload(add(pubSignals, 5568)))
                
                g1_mulAccC(_pVk, IC176x, IC176y, calldataload(add(pubSignals, 5600)))
                
                g1_mulAccC(_pVk, IC177x, IC177y, calldataload(add(pubSignals, 5632)))
                
                g1_mulAccC(_pVk, IC178x, IC178y, calldataload(add(pubSignals, 5664)))
                
                g1_mulAccC(_pVk, IC179x, IC179y, calldataload(add(pubSignals, 5696)))
                
                g1_mulAccC(_pVk, IC180x, IC180y, calldataload(add(pubSignals, 5728)))
                
                g1_mulAccC(_pVk, IC181x, IC181y, calldataload(add(pubSignals, 5760)))
                
                g1_mulAccC(_pVk, IC182x, IC182y, calldataload(add(pubSignals, 5792)))
                
                g1_mulAccC(_pVk, IC183x, IC183y, calldataload(add(pubSignals, 5824)))
                
                g1_mulAccC(_pVk, IC184x, IC184y, calldataload(add(pubSignals, 5856)))
                
                g1_mulAccC(_pVk, IC185x, IC185y, calldataload(add(pubSignals, 5888)))
                
                g1_mulAccC(_pVk, IC186x, IC186y, calldataload(add(pubSignals, 5920)))
                
                g1_mulAccC(_pVk, IC187x, IC187y, calldataload(add(pubSignals, 5952)))
                
                g1_mulAccC(_pVk, IC188x, IC188y, calldataload(add(pubSignals, 5984)))
                
                g1_mulAccC(_pVk, IC189x, IC189y, calldataload(add(pubSignals, 6016)))
                
                g1_mulAccC(_pVk, IC190x, IC190y, calldataload(add(pubSignals, 6048)))
                
                g1_mulAccC(_pVk, IC191x, IC191y, calldataload(add(pubSignals, 6080)))
                
                g1_mulAccC(_pVk, IC192x, IC192y, calldataload(add(pubSignals, 6112)))
                
                g1_mulAccC(_pVk, IC193x, IC193y, calldataload(add(pubSignals, 6144)))
                
                g1_mulAccC(_pVk, IC194x, IC194y, calldataload(add(pubSignals, 6176)))
                
                g1_mulAccC(_pVk, IC195x, IC195y, calldataload(add(pubSignals, 6208)))
                
                g1_mulAccC(_pVk, IC196x, IC196y, calldataload(add(pubSignals, 6240)))
                
                g1_mulAccC(_pVk, IC197x, IC197y, calldataload(add(pubSignals, 6272)))
                
                g1_mulAccC(_pVk, IC198x, IC198y, calldataload(add(pubSignals, 6304)))
                
                g1_mulAccC(_pVk, IC199x, IC199y, calldataload(add(pubSignals, 6336)))
                
                g1_mulAccC(_pVk, IC200x, IC200y, calldataload(add(pubSignals, 6368)))
                
                g1_mulAccC(_pVk, IC201x, IC201y, calldataload(add(pubSignals, 6400)))
                
                g1_mulAccC(_pVk, IC202x, IC202y, calldataload(add(pubSignals, 6432)))
                
                g1_mulAccC(_pVk, IC203x, IC203y, calldataload(add(pubSignals, 6464)))
                
                g1_mulAccC(_pVk, IC204x, IC204y, calldataload(add(pubSignals, 6496)))
                
                g1_mulAccC(_pVk, IC205x, IC205y, calldataload(add(pubSignals, 6528)))
                
                g1_mulAccC(_pVk, IC206x, IC206y, calldataload(add(pubSignals, 6560)))
                
                g1_mulAccC(_pVk, IC207x, IC207y, calldataload(add(pubSignals, 6592)))
                
                g1_mulAccC(_pVk, IC208x, IC208y, calldataload(add(pubSignals, 6624)))
                
                g1_mulAccC(_pVk, IC209x, IC209y, calldataload(add(pubSignals, 6656)))
                
                g1_mulAccC(_pVk, IC210x, IC210y, calldataload(add(pubSignals, 6688)))
                
                g1_mulAccC(_pVk, IC211x, IC211y, calldataload(add(pubSignals, 6720)))
                
                g1_mulAccC(_pVk, IC212x, IC212y, calldataload(add(pubSignals, 6752)))
                
                g1_mulAccC(_pVk, IC213x, IC213y, calldataload(add(pubSignals, 6784)))
                
                g1_mulAccC(_pVk, IC214x, IC214y, calldataload(add(pubSignals, 6816)))
                
                g1_mulAccC(_pVk, IC215x, IC215y, calldataload(add(pubSignals, 6848)))
                
                g1_mulAccC(_pVk, IC216x, IC216y, calldataload(add(pubSignals, 6880)))
                
                g1_mulAccC(_pVk, IC217x, IC217y, calldataload(add(pubSignals, 6912)))
                
                g1_mulAccC(_pVk, IC218x, IC218y, calldataload(add(pubSignals, 6944)))
                
                g1_mulAccC(_pVk, IC219x, IC219y, calldataload(add(pubSignals, 6976)))
                
                g1_mulAccC(_pVk, IC220x, IC220y, calldataload(add(pubSignals, 7008)))
                
                g1_mulAccC(_pVk, IC221x, IC221y, calldataload(add(pubSignals, 7040)))
                
                g1_mulAccC(_pVk, IC222x, IC222y, calldataload(add(pubSignals, 7072)))
                
                g1_mulAccC(_pVk, IC223x, IC223y, calldataload(add(pubSignals, 7104)))
                
                g1_mulAccC(_pVk, IC224x, IC224y, calldataload(add(pubSignals, 7136)))
                
                g1_mulAccC(_pVk, IC225x, IC225y, calldataload(add(pubSignals, 7168)))
                
                g1_mulAccC(_pVk, IC226x, IC226y, calldataload(add(pubSignals, 7200)))
                
                g1_mulAccC(_pVk, IC227x, IC227y, calldataload(add(pubSignals, 7232)))
                
                g1_mulAccC(_pVk, IC228x, IC228y, calldataload(add(pubSignals, 7264)))
                
                g1_mulAccC(_pVk, IC229x, IC229y, calldataload(add(pubSignals, 7296)))
                
                g1_mulAccC(_pVk, IC230x, IC230y, calldataload(add(pubSignals, 7328)))
                
                g1_mulAccC(_pVk, IC231x, IC231y, calldataload(add(pubSignals, 7360)))
                
                g1_mulAccC(_pVk, IC232x, IC232y, calldataload(add(pubSignals, 7392)))
                
                g1_mulAccC(_pVk, IC233x, IC233y, calldataload(add(pubSignals, 7424)))
                
                g1_mulAccC(_pVk, IC234x, IC234y, calldataload(add(pubSignals, 7456)))
                
                g1_mulAccC(_pVk, IC235x, IC235y, calldataload(add(pubSignals, 7488)))
                
                g1_mulAccC(_pVk, IC236x, IC236y, calldataload(add(pubSignals, 7520)))
                
                g1_mulAccC(_pVk, IC237x, IC237y, calldataload(add(pubSignals, 7552)))
                
                g1_mulAccC(_pVk, IC238x, IC238y, calldataload(add(pubSignals, 7584)))
                
                g1_mulAccC(_pVk, IC239x, IC239y, calldataload(add(pubSignals, 7616)))
                
                g1_mulAccC(_pVk, IC240x, IC240y, calldataload(add(pubSignals, 7648)))
                

                // -A
                mstore(_pPairing, calldataload(pA))
                mstore(add(_pPairing, 32), mod(sub(q, calldataload(add(pA, 32))), q))

                // B
                mstore(add(_pPairing, 64), calldataload(pB))
                mstore(add(_pPairing, 96), calldataload(add(pB, 32)))
                mstore(add(_pPairing, 128), calldataload(add(pB, 64)))
                mstore(add(_pPairing, 160), calldataload(add(pB, 96)))

                // alpha1
                mstore(add(_pPairing, 192), alphax)
                mstore(add(_pPairing, 224), alphay)

                // beta2
                mstore(add(_pPairing, 256), betax1)
                mstore(add(_pPairing, 288), betax2)
                mstore(add(_pPairing, 320), betay1)
                mstore(add(_pPairing, 352), betay2)

                // vk_x
                mstore(add(_pPairing, 384), mload(add(pMem, pVk)))
                mstore(add(_pPairing, 416), mload(add(pMem, add(pVk, 32))))


                // gamma2
                mstore(add(_pPairing, 448), gammax1)
                mstore(add(_pPairing, 480), gammax2)
                mstore(add(_pPairing, 512), gammay1)
                mstore(add(_pPairing, 544), gammay2)

                // C
                mstore(add(_pPairing, 576), calldataload(pC))
                mstore(add(_pPairing, 608), calldataload(add(pC, 32)))

                // delta2
                mstore(add(_pPairing, 640), deltax1)
                mstore(add(_pPairing, 672), deltax2)
                mstore(add(_pPairing, 704), deltay1)
                mstore(add(_pPairing, 736), deltay2)


                let success := staticcall(sub(gas(), 2000), 8, _pPairing, 768, _pPairing, 0x20)

                isOk := and(success, mload(_pPairing))
            }

            let pMem := mload(0x40)
            mstore(0x40, add(pMem, pLastMem))

            // Validate that all evaluations ∈ F
            
            checkField(calldataload(add(_pubSignals, 0)))
            
            checkField(calldataload(add(_pubSignals, 32)))
            
            checkField(calldataload(add(_pubSignals, 64)))
            
            checkField(calldataload(add(_pubSignals, 96)))
            
            checkField(calldataload(add(_pubSignals, 128)))
            
            checkField(calldataload(add(_pubSignals, 160)))
            
            checkField(calldataload(add(_pubSignals, 192)))
            
            checkField(calldataload(add(_pubSignals, 224)))
            
            checkField(calldataload(add(_pubSignals, 256)))
            
            checkField(calldataload(add(_pubSignals, 288)))
            
            checkField(calldataload(add(_pubSignals, 320)))
            
            checkField(calldataload(add(_pubSignals, 352)))
            
            checkField(calldataload(add(_pubSignals, 384)))
            
            checkField(calldataload(add(_pubSignals, 416)))
            
            checkField(calldataload(add(_pubSignals, 448)))
            
            checkField(calldataload(add(_pubSignals, 480)))
            
            checkField(calldataload(add(_pubSignals, 512)))
            
            checkField(calldataload(add(_pubSignals, 544)))
            
            checkField(calldataload(add(_pubSignals, 576)))
            
            checkField(calldataload(add(_pubSignals, 608)))
            
            checkField(calldataload(add(_pubSignals, 640)))
            
            checkField(calldataload(add(_pubSignals, 672)))
            
            checkField(calldataload(add(_pubSignals, 704)))
            
            checkField(calldataload(add(_pubSignals, 736)))
            
            checkField(calldataload(add(_pubSignals, 768)))
            
            checkField(calldataload(add(_pubSignals, 800)))
            
            checkField(calldataload(add(_pubSignals, 832)))
            
            checkField(calldataload(add(_pubSignals, 864)))
            
            checkField(calldataload(add(_pubSignals, 896)))
            
            checkField(calldataload(add(_pubSignals, 928)))
            
            checkField(calldataload(add(_pubSignals, 960)))
            
            checkField(calldataload(add(_pubSignals, 992)))
            
            checkField(calldataload(add(_pubSignals, 1024)))
            
            checkField(calldataload(add(_pubSignals, 1056)))
            
            checkField(calldataload(add(_pubSignals, 1088)))
            
            checkField(calldataload(add(_pubSignals, 1120)))
            
            checkField(calldataload(add(_pubSignals, 1152)))
            
            checkField(calldataload(add(_pubSignals, 1184)))
            
            checkField(calldataload(add(_pubSignals, 1216)))
            
            checkField(calldataload(add(_pubSignals, 1248)))
            
            checkField(calldataload(add(_pubSignals, 1280)))
            
            checkField(calldataload(add(_pubSignals, 1312)))
            
            checkField(calldataload(add(_pubSignals, 1344)))
            
            checkField(calldataload(add(_pubSignals, 1376)))
            
            checkField(calldataload(add(_pubSignals, 1408)))
            
            checkField(calldataload(add(_pubSignals, 1440)))
            
            checkField(calldataload(add(_pubSignals, 1472)))
            
            checkField(calldataload(add(_pubSignals, 1504)))
            
            checkField(calldataload(add(_pubSignals, 1536)))
            
            checkField(calldataload(add(_pubSignals, 1568)))
            
            checkField(calldataload(add(_pubSignals, 1600)))
            
            checkField(calldataload(add(_pubSignals, 1632)))
            
            checkField(calldataload(add(_pubSignals, 1664)))
            
            checkField(calldataload(add(_pubSignals, 1696)))
            
            checkField(calldataload(add(_pubSignals, 1728)))
            
            checkField(calldataload(add(_pubSignals, 1760)))
            
            checkField(calldataload(add(_pubSignals, 1792)))
            
            checkField(calldataload(add(_pubSignals, 1824)))
            
            checkField(calldataload(add(_pubSignals, 1856)))
            
            checkField(calldataload(add(_pubSignals, 1888)))
            
            checkField(calldataload(add(_pubSignals, 1920)))
            
            checkField(calldataload(add(_pubSignals, 1952)))
            
            checkField(calldataload(add(_pubSignals, 1984)))
            
            checkField(calldataload(add(_pubSignals, 2016)))
            
            checkField(calldataload(add(_pubSignals, 2048)))
            
            checkField(calldataload(add(_pubSignals, 2080)))
            
            checkField(calldataload(add(_pubSignals, 2112)))
            
            checkField(calldataload(add(_pubSignals, 2144)))
            
            checkField(calldataload(add(_pubSignals, 2176)))
            
            checkField(calldataload(add(_pubSignals, 2208)))
            
            checkField(calldataload(add(_pubSignals, 2240)))
            
            checkField(calldataload(add(_pubSignals, 2272)))
            
            checkField(calldataload(add(_pubSignals, 2304)))
            
            checkField(calldataload(add(_pubSignals, 2336)))
            
            checkField(calldataload(add(_pubSignals, 2368)))
            
            checkField(calldataload(add(_pubSignals, 2400)))
            
            checkField(calldataload(add(_pubSignals, 2432)))
            
            checkField(calldataload(add(_pubSignals, 2464)))
            
            checkField(calldataload(add(_pubSignals, 2496)))
            
            checkField(calldataload(add(_pubSignals, 2528)))
            
            checkField(calldataload(add(_pubSignals, 2560)))
            
            checkField(calldataload(add(_pubSignals, 2592)))
            
            checkField(calldataload(add(_pubSignals, 2624)))
            
            checkField(calldataload(add(_pubSignals, 2656)))
            
            checkField(calldataload(add(_pubSignals, 2688)))
            
            checkField(calldataload(add(_pubSignals, 2720)))
            
            checkField(calldataload(add(_pubSignals, 2752)))
            
            checkField(calldataload(add(_pubSignals, 2784)))
            
            checkField(calldataload(add(_pubSignals, 2816)))
            
            checkField(calldataload(add(_pubSignals, 2848)))
            
            checkField(calldataload(add(_pubSignals, 2880)))
            
            checkField(calldataload(add(_pubSignals, 2912)))
            
            checkField(calldataload(add(_pubSignals, 2944)))
            
            checkField(calldataload(add(_pubSignals, 2976)))
            
            checkField(calldataload(add(_pubSignals, 3008)))
            
            checkField(calldataload(add(_pubSignals, 3040)))
            
            checkField(calldataload(add(_pubSignals, 3072)))
            
            checkField(calldataload(add(_pubSignals, 3104)))
            
            checkField(calldataload(add(_pubSignals, 3136)))
            
            checkField(calldataload(add(_pubSignals, 3168)))
            
            checkField(calldataload(add(_pubSignals, 3200)))
            
            checkField(calldataload(add(_pubSignals, 3232)))
            
            checkField(calldataload(add(_pubSignals, 3264)))
            
            checkField(calldataload(add(_pubSignals, 3296)))
            
            checkField(calldataload(add(_pubSignals, 3328)))
            
            checkField(calldataload(add(_pubSignals, 3360)))
            
            checkField(calldataload(add(_pubSignals, 3392)))
            
            checkField(calldataload(add(_pubSignals, 3424)))
            
            checkField(calldataload(add(_pubSignals, 3456)))
            
            checkField(calldataload(add(_pubSignals, 3488)))
            
            checkField(calldataload(add(_pubSignals, 3520)))
            
            checkField(calldataload(add(_pubSignals, 3552)))
            
            checkField(calldataload(add(_pubSignals, 3584)))
            
            checkField(calldataload(add(_pubSignals, 3616)))
            
            checkField(calldataload(add(_pubSignals, 3648)))
            
            checkField(calldataload(add(_pubSignals, 3680)))
            
            checkField(calldataload(add(_pubSignals, 3712)))
            
            checkField(calldataload(add(_pubSignals, 3744)))
            
            checkField(calldataload(add(_pubSignals, 3776)))
            
            checkField(calldataload(add(_pubSignals, 3808)))
            
            checkField(calldataload(add(_pubSignals, 3840)))
            
            checkField(calldataload(add(_pubSignals, 3872)))
            
            checkField(calldataload(add(_pubSignals, 3904)))
            
            checkField(calldataload(add(_pubSignals, 3936)))
            
            checkField(calldataload(add(_pubSignals, 3968)))
            
            checkField(calldataload(add(_pubSignals, 4000)))
            
            checkField(calldataload(add(_pubSignals, 4032)))
            
            checkField(calldataload(add(_pubSignals, 4064)))
            
            checkField(calldataload(add(_pubSignals, 4096)))
            
            checkField(calldataload(add(_pubSignals, 4128)))
            
            checkField(calldataload(add(_pubSignals, 4160)))
            
            checkField(calldataload(add(_pubSignals, 4192)))
            
            checkField(calldataload(add(_pubSignals, 4224)))
            
            checkField(calldataload(add(_pubSignals, 4256)))
            
            checkField(calldataload(add(_pubSignals, 4288)))
            
            checkField(calldataload(add(_pubSignals, 4320)))
            
            checkField(calldataload(add(_pubSignals, 4352)))
            
            checkField(calldataload(add(_pubSignals, 4384)))
            
            checkField(calldataload(add(_pubSignals, 4416)))
            
            checkField(calldataload(add(_pubSignals, 4448)))
            
            checkField(calldataload(add(_pubSignals, 4480)))
            
            checkField(calldataload(add(_pubSignals, 4512)))
            
            checkField(calldataload(add(_pubSignals, 4544)))
            
            checkField(calldataload(add(_pubSignals, 4576)))
            
            checkField(calldataload(add(_pubSignals, 4608)))
            
            checkField(calldataload(add(_pubSignals, 4640)))
            
            checkField(calldataload(add(_pubSignals, 4672)))
            
            checkField(calldataload(add(_pubSignals, 4704)))
            
            checkField(calldataload(add(_pubSignals, 4736)))
            
            checkField(calldataload(add(_pubSignals, 4768)))
            
            checkField(calldataload(add(_pubSignals, 4800)))
            
            checkField(calldataload(add(_pubSignals, 4832)))
            
            checkField(calldataload(add(_pubSignals, 4864)))
            
            checkField(calldataload(add(_pubSignals, 4896)))
            
            checkField(calldataload(add(_pubSignals, 4928)))
            
            checkField(calldataload(add(_pubSignals, 4960)))
            
            checkField(calldataload(add(_pubSignals, 4992)))
            
            checkField(calldataload(add(_pubSignals, 5024)))
            
            checkField(calldataload(add(_pubSignals, 5056)))
            
            checkField(calldataload(add(_pubSignals, 5088)))
            
            checkField(calldataload(add(_pubSignals, 5120)))
            
            checkField(calldataload(add(_pubSignals, 5152)))
            
            checkField(calldataload(add(_pubSignals, 5184)))
            
            checkField(calldataload(add(_pubSignals, 5216)))
            
            checkField(calldataload(add(_pubSignals, 5248)))
            
            checkField(calldataload(add(_pubSignals, 5280)))
            
            checkField(calldataload(add(_pubSignals, 5312)))
            
            checkField(calldataload(add(_pubSignals, 5344)))
            
            checkField(calldataload(add(_pubSignals, 5376)))
            
            checkField(calldataload(add(_pubSignals, 5408)))
            
            checkField(calldataload(add(_pubSignals, 5440)))
            
            checkField(calldataload(add(_pubSignals, 5472)))
            
            checkField(calldataload(add(_pubSignals, 5504)))
            
            checkField(calldataload(add(_pubSignals, 5536)))
            
            checkField(calldataload(add(_pubSignals, 5568)))
            
            checkField(calldataload(add(_pubSignals, 5600)))
            
            checkField(calldataload(add(_pubSignals, 5632)))
            
            checkField(calldataload(add(_pubSignals, 5664)))
            
            checkField(calldataload(add(_pubSignals, 5696)))
            
            checkField(calldataload(add(_pubSignals, 5728)))
            
            checkField(calldataload(add(_pubSignals, 5760)))
            
            checkField(calldataload(add(_pubSignals, 5792)))
            
            checkField(calldataload(add(_pubSignals, 5824)))
            
            checkField(calldataload(add(_pubSignals, 5856)))
            
            checkField(calldataload(add(_pubSignals, 5888)))
            
            checkField(calldataload(add(_pubSignals, 5920)))
            
            checkField(calldataload(add(_pubSignals, 5952)))
            
            checkField(calldataload(add(_pubSignals, 5984)))
            
            checkField(calldataload(add(_pubSignals, 6016)))
            
            checkField(calldataload(add(_pubSignals, 6048)))
            
            checkField(calldataload(add(_pubSignals, 6080)))
            
            checkField(calldataload(add(_pubSignals, 6112)))
            
            checkField(calldataload(add(_pubSignals, 6144)))
            
            checkField(calldataload(add(_pubSignals, 6176)))
            
            checkField(calldataload(add(_pubSignals, 6208)))
            
            checkField(calldataload(add(_pubSignals, 6240)))
            
            checkField(calldataload(add(_pubSignals, 6272)))
            
            checkField(calldataload(add(_pubSignals, 6304)))
            
            checkField(calldataload(add(_pubSignals, 6336)))
            
            checkField(calldataload(add(_pubSignals, 6368)))
            
            checkField(calldataload(add(_pubSignals, 6400)))
            
            checkField(calldataload(add(_pubSignals, 6432)))
            
            checkField(calldataload(add(_pubSignals, 6464)))
            
            checkField(calldataload(add(_pubSignals, 6496)))
            
            checkField(calldataload(add(_pubSignals, 6528)))
            
            checkField(calldataload(add(_pubSignals, 6560)))
            
            checkField(calldataload(add(_pubSignals, 6592)))
            
            checkField(calldataload(add(_pubSignals, 6624)))
            
            checkField(calldataload(add(_pubSignals, 6656)))
            
            checkField(calldataload(add(_pubSignals, 6688)))
            
            checkField(calldataload(add(_pubSignals, 6720)))
            
            checkField(calldataload(add(_pubSignals, 6752)))
            
            checkField(calldataload(add(_pubSignals, 6784)))
            
            checkField(calldataload(add(_pubSignals, 6816)))
            
            checkField(calldataload(add(_pubSignals, 6848)))
            
            checkField(calldataload(add(_pubSignals, 6880)))
            
            checkField(calldataload(add(_pubSignals, 6912)))
            
            checkField(calldataload(add(_pubSignals, 6944)))
            
            checkField(calldataload(add(_pubSignals, 6976)))
            
            checkField(calldataload(add(_pubSignals, 7008)))
            
            checkField(calldataload(add(_pubSignals, 7040)))
            
            checkField(calldataload(add(_pubSignals, 7072)))
            
            checkField(calldataload(add(_pubSignals, 7104)))
            
            checkField(calldataload(add(_pubSignals, 7136)))
            
            checkField(calldataload(add(_pubSignals, 7168)))
            
            checkField(calldataload(add(_pubSignals, 7200)))
            
            checkField(calldataload(add(_pubSignals, 7232)))
            
            checkField(calldataload(add(_pubSignals, 7264)))
            
            checkField(calldataload(add(_pubSignals, 7296)))
            
            checkField(calldataload(add(_pubSignals, 7328)))
            
            checkField(calldataload(add(_pubSignals, 7360)))
            
            checkField(calldataload(add(_pubSignals, 7392)))
            
            checkField(calldataload(add(_pubSignals, 7424)))
            
            checkField(calldataload(add(_pubSignals, 7456)))
            
            checkField(calldataload(add(_pubSignals, 7488)))
            
            checkField(calldataload(add(_pubSignals, 7520)))
            
            checkField(calldataload(add(_pubSignals, 7552)))
            
            checkField(calldataload(add(_pubSignals, 7584)))
            
            checkField(calldataload(add(_pubSignals, 7616)))
            
            checkField(calldataload(add(_pubSignals, 7648)))
            
            checkField(calldataload(add(_pubSignals, 7680)))
            

            // Validate all evaluations
            let isValid := checkPairing(_pA, _pB, _pC, _pubSignals, pMem)

            mstore(0, isValid)
             return(0, 0x20)
         }
     }
 }
